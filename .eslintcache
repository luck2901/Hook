[{"C:\\Users\\HanSangHyeon\\Desktop\\Hook\\src\\index.js":"1","C:\\Users\\HanSangHyeon\\Desktop\\Hook\\src\\reportWebVitals.js":"2","C:\\Users\\HanSangHyeon\\Desktop\\Hook\\src\\useInput\\App.js":"3"},{"size":1587,"mtime":1612253640874,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1610437580482,"results":"6","hashOfConfig":"5"},{"size":1167,"mtime":1612253793357,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1l1f5rs",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"C:\\Users\\HanSangHyeon\\Desktop\\Hook\\src\\index.js",["15"],"C:\\Users\\HanSangHyeon\\Desktop\\Hook\\src\\reportWebVitals.js",[],"C:\\Users\\HanSangHyeon\\Desktop\\Hook\\src\\useInput\\App.js",["16","17"],"import React, { useState, useEffect, useRef } from \"react\";\n\nconst useInput = (initialValue, validator) => {\n  // useInput 매개변수에는 초기값 : initialValue, 유효값 : validator 넣어준다.\n  // validator를 넣는 것은 선택.(글자길이제한,글자유형제한)\n  const [value, setValue] = useState(initialValue);\n  //useState로 value의 초기값 설정. \n  const onChange = (event) => {\n    const {\n      target: { value }\n    } = event;\n    let willUpdate = true;\n    //유효값 설정. false이면 update X\n    if (typeof validator === \"function\") {\n      willUpdate = validator(value);\n    }\n    //validator의 type이 function이면 validator(value) 삽입.\n    if (willUpdate) {\n      setValue(value);\n    }\n    //willUpdate가 true이면 setValue에 value 값 삽입.\n  };\n  return { value, onChange };\n};\nconst App = () => {\n  const maxLen = (value) => value.length <= 10;\n  //maxLen true, false값 만들어 useInput으로 보냄.\n  const name = useInput(\"Mr.\", maxLen);\n  //Mr가 기본값.\n  return (\n    <div className=\"App\">\n      <h1>hello</h1>\n      <input placeholder=\"Name\" {...name} />\n    </div>\n  );\n};\n\nexport default App;",{"ruleId":null,"fatal":true,"severity":2,"message":"18","line":28,"column":7},{"ruleId":"19","severity":1,"message":"20","line":1,"column":27,"nodeType":"21","messageId":"22","endLine":1,"endColumn":36},{"ruleId":"19","severity":1,"message":"23","line":1,"column":38,"nodeType":"21","messageId":"22","endLine":1,"endColumn":44},"Parsing error: Identifier 'App' has already been declared\n\n  26 |   return { value, onChange };\n  27 | };\n> 28 | const App = () => {\n     |       ^\n  29 |   const maxLen = (value) => value.length <= 10;\n  30 |   //maxLen true, false값 만들어 useInput으로 보냄.\n  31 |   const name = useInput(\"Mr.\", maxLen);","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used."]